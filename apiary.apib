FORMAT: 1A
HOST: https://ukache-spotters-web.herokuapp.com/api

# Spotters Api

# Accessing missions from the mobile app

User of the mobile app is able to access and manage missions. 

## Authentication [/auth/local]

All api endpoints requires user to pass `jwt-token`. In order to obtain it, user will have to log in first. 

### Log in [POST]

In order to obtain `token` user will have to pass `email` and `password`. 

+ Request (application/json)

        {
            "email": "test@test.com",
            "password": "password"
        }

+ Response 200 (application/json)

        {
            "token": "someToken"
        }



## Missions Collection [/missions/locations{?location,state}]
### List 40 closest Missions [GET]

+ Parameters
    + location (required, array, `40.714728,-73.998672`) ... Location where to look for missions
    + state (required, string, `active`) ... State of the mission, possible `active`

+ Request (application/json)
  
    + Headers

            authorization: Bearer <JWT-Token>

    
+ Response 200 (application/json)

        [
            {
              "id": 1, 
              "title": "Nice and easy", 
              "company": "Tesco",
              "address": {
                "coordinates": [40.714728, -73.998672],
                "distance": 0.2
              }, 
              "dueDate": "30-12-2014 22:10", 
              "price": 5
            },
            {
              "id": 2, 
              "title": "Nice and easy", 
              "company": "Tesco",
              "address": {
                "coordinates": [40.714728, -74.998672],
                "distance": 10.2
              }, 
              "dueDate": "31-12-2014 12:10", 
              "price": 10
            }
        ]

## Mission Details [/missions/locations/{id}]
A single Mission object with all its details

+ Parameters
    + id (required, number, `1`) ... Numeric `id` of the Mission to perform action with.

### Retrieve a Mission [GET]
+ Response 200 (application/json)

    + Header

            X-My-Header: The Value

    + Body

            {
                  "id": 1,
                  "title": "Nice and easy",
                  "company": "Tesco",
                  "address": {
                    "coordinates": [40.714728, -73.998672],
                    "distance": 0.2
                  },
                  "status": "open",
                  "dueDate": "2015-01-22T15:20:38",
                  "price": 5,
                  "tasks": [
                    {"type": "question", "count": 5, "icon": "ion-alert"},
                    {"type": "question", "count": 5, "icon": "ion-alert"},
                    {"type": "question", "count": 5, "icon": "ion-alert"},
                    {"type": "question", "count": 5, "icon": "ion-alert"},
                    {"type": "photo", "count": 1, "icon": "ion-help-circled"}
                  ],
                  "instructions": "<p>Some <b>html</b> descipiton</p>"
            }
            
## Mission Tasks [/missions/{id}/tasks]

Tasks related to the mission. 
Mission can have multiple different type of tasks.
* yes/no question
* take and upload picture
* select 
* free text question

+ Parameters
    + id (required, number, `1`) ... Numeric `id` of the Mission to perform action with.

### Retrieve a Mission Tasks [GET]

+ Response 200 (application/json)
    + Body
    
            [
                {
                    "type": "yes-no",
                    "id": "packaging",
                    "label": "Do you like packaging?"
                },
                {
                    "type": "photo",
                    "id": "pic1",
                    "label": "Take a photo of the product"
                },
                {
                    "type": "text",
                    "id": "text1",
                    "label": "What products stands next to it?"
                }
                
            ]


            
## Accept Mission [/missions/locations/{id}/accept]

Mission will be assign/declined for the user who is executing the action. 

### Accept a mission [PUT]

* Only mission in `state='active'` can be accepted. 
* `bookingDueTime` is calculated and set for the mission

+ Response 200 (application/json)

    + Body
    
            {
                  "id": 1,
                  "title": "Nice and easy",
                  "company": "Tesco",
                  "address": {
                    "coordinates": [40.714728, -73.998672],
                    "distance": 0.2
                  },
                  "dueDate": "2015-01-22T15:20:38",
                  "bookingDueTime": "2015-01-10T15:20:38",
                  "status": "booked",
                  "price": 5,
                  "tasks": [
                    {"type": "question", "count": 5, "icon": "ion-alert"},
                    {"type": "question", "count": 5, "icon": "ion-alert"},
                    {"type": "question", "count": 5, "icon": "ion-alert"},
                    {"type": "question", "count": 5, "icon": "ion-alert"},
                    {"type": "photo", "count": 1, "icon": "ion-help-circled"}
                  ],
                  "instructions": "<p>Some <b>html</b> descipiton</p>"
            }
            
### Decline a mission [DELETE]

* Only mission in state='booked' can be declined.

+ Response 200 (application/json)

    + Body
    
            {
                  "id": 1,
                  "title": "Nice and easy",
                  "company": "Tesco",
                  "address": {
                    "coordinates": [40.714728, -73.998672],
                    "distance": 0.2
                  },
                  "dueDate": "2015-01-22T15:20:38",
                  "bookingDueTime": "",
                  "status": "open",
                  "price": 5,
                  "tasks": [
                    {"type": "question", "count": 5, "icon": "ion-alert"},
                    {"type": "question", "count": 5, "icon": "ion-alert"},
                    {"type": "question", "count": 5, "icon": "ion-alert"},
                    {"type": "question", "count": 5, "icon": "ion-alert"},
                    {"type": "photo", "count": 1, "icon": "ion-help-circled"}
                  ],
                  "instructions": "<p>Some <b>html</b> descipiton</p>"
            }



